name: "Testing jdk 21 ea"
on:
  workflow_dispatch:
jobs:
  build-dependencies:
    name: Build Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 21-ea ]
    steps:
      - uses: actions/checkout@v3
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Build Quarkus main
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus && ./mvnw -B -s .github/mvn-settings.xml clean install -Dquickly -Dno-test-modules -Prelocations
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v3
        with:
          name: maven-repo
          path: maven-repo.tgz
          retention-days: 1
  linux-build-jvm-latest:
    name: Daily - Linux - JVM build - Latest Version
    runs-on: ubuntu-latest
    needs: build-dependencies
    strategy:
      matrix:
        java: [ 21-ea ]
        profiles: [ "root-modules,http-modules,security-modules,spring-modules",
                    "sql-db-modules",
                    "messaging-modules,websockets-modules,monitoring-modules,test-tooling-modules"]
    steps:
      - uses: actions/checkout@v3
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Install Quarkus CLI
        run: |
          cat <<EOF > ./quarkus-dev-cli
          #!/bin/bash
          java -jar ~/.m2/repository/io/quarkus/quarkus-cli/999-SNAPSHOT/quarkus-cli-999-SNAPSHOT-runner.jar "\$@"
          EOF
          chmod +x ./quarkus-dev-cli
          ./quarkus-dev-cli version
      - name: Test in JVM mode
        run: |
          mvn -fae -V -B -s .github/mvn-settings.xml -fae clean verify -P ${{ matrix.profiles }} -Dinclude.quarkus-cli-tests -Dts.quarkus.cli.cmd="${PWD}/quarkus-dev-cli"
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-jvm${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ci-artifacts
          path: artifacts-jvm${{ matrix.java }}.zip
  windows-build-jvm-latest:
    name: Daily - Windows - JVM build - Latest Version
    runs-on: windows-latest
    needs: build-dependencies
    strategy:
      matrix:
        java: [ 21-ea ]
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build in JVM mode
        shell: bash
        run: |
          mvn -B -fae -s .github/mvn-settings.xml clean verify
      - name: Zip Artifacts
        shell: bash
        if: failure()
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -name '*-reports/*' -type d | tar -czf artifacts-latest-windows-jvm${{ matrix.java }}.tar -T -
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ci-artifacts
          path: artifacts-latest-windows-jvm${{ matrix.java }}.tar
