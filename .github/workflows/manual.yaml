name: "Manual check with custom framework"

on:
  workflow_dispatch:
    inputs:
      framework-repository:
        description: 'URI to clone quarkus test framework repository'
        required: true
        type: string
        default: 'https://github.com/jedla97/quarkus-test-framework.git'
      framework-branch:
        description: 'Branch of framework'
        required: true
        type: string
        default: 'main'
jobs:
  build-dependencies:
    name: Build Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v3
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Build Quarkus main
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus && ./mvnw -B -s .github/mvn-settings.xml clean install -Dquickly -Dno-test-modules -Prelocations
      - name: Build Framework
        id: framework
        run: |
          cd ~/ && git clone ${{ github.event.inputs.framework-repository }} && cd quarkus-test-framework && git checkout ${{ github.event.inputs.framework-branch }} && ./mvnw install -Pframework,extensions,examples
          echo "frameworkVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v3
        with:
          name: maven-repo
          path: maven-repo.tgz
          retention-days: 1
  linux-validate-format:
    name: Linux - Validate format
    runs-on: ubuntu-latest
    needs: build-dependencies
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build with Maven
        run: |
          mvn -V -B -s .github/mvn-settings.xml verify -Dall-modules -Dvalidate-format -DskipTests -DskipITs -Dquarkus.container-image.build=false -Dquarkus.container-image.push=false
  detect-test-suite-modules:
    name: Detect Modules in PR
    runs-on: ubuntu-latest
    needs: [ build-dependencies, linux-validate-format ]
    steps:
      - uses: actions/checkout@v3
      - id: files
        uses: tj-actions/changed-files@v37
        continue-on-error: true
      - id: detect-changes
        run: |
          MODULES=$(find -name pom.xml | sed -e 's|pom.xml| |' | sed -e 's|./| |' | grep -v " quarkus/")
          CHANGED=""
          MODULES_ARG=""

          for module in $MODULES
          do
            if [[ "${{ steps.files.outputs.all_changed_and_modified_files }}" =~ ("$module") ]] ; then
                CHANGED=$(echo $CHANGED" "$module)
            fi
          done

          MODULES_ARG="${CHANGED// /,}"
          echo "MODULES_ARG=$MODULES_ARG" >> $GITHUB_OUTPUT
    outputs:
      MODULES_ARG: ${{ steps.detect-changes.outputs.MODULES_ARG }}
  windows-build-jvm-latest:
    name: PR - Windows - JVM build - Latest Version
    runs-on: windows-latest
    needs: detect-test-suite-modules
    env:
      MODULES_ARG: ${{ needs.detect-test-suite-modules.outputs.MODULES_ARG }}
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build in JVM mode
        shell: bash
        run: |
          MODULES_MAVEN_PARAM=""
          if [[ -n ${MODULES_ARG} ]]; then
            echo "Running modules: ${MODULES_ARG}"
            MODULES_MAVEN_PARAM="-pl ${MODULES_ARG}"
          fi

          mvn -Dquarkus.qe.framework.version=${{ needs.build-dependencies.outputs.frameworkVersion }}  -B -fae -s .github/mvn-settings.xml clean verify -Dall-modules $MODULES_MAVEN_PARAM -am
      - name: Zip Artifacts
        shell: bash
        if: failure()
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -name '*-reports/*' -type d | tar -czf artifacts-latest-windows-jvm${{ matrix.java }}.tar -T -
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ci-artifacts
          path: artifacts-latest-windows-jvm${{ matrix.java }}.tar
